#!/hint/bash

pkgname=llvm-bolt
pkgver=18.1.7
pkgrel=2
pkgdesc='A post-link optimizer developed to speed up large applications'
url="https://github.com/llvm/llvm-project/tree/main/bolt"
license=('custom:Apache 2.0 with LLVM Exception')
arch=('x86_64')
makedepends=('clang' 'cmake' 'ninja' 'llvm' 'llvm-libs' 'python' 'mold')
options=('!lto' '!debug')
source=("https://github.com/llvm/llvm-project/releases/download/llvmorg-$pkgver/llvm-project-$pkgver.src.tar.xz"{,.sig})
sha512sums=(
    '0f67818267803aca9d2bc9eb89335ee6dc56269e8066a0f8a48c4a959e8805dbf6bc839b9f96a92f86ee50d72e7cc326ffe18febb5eb06751ab54a217c0221c8'
    'SKIP'
)
validpgpkeys=('474E22316ABF4785A88C6E8EA2C794A986419D8A'  # Tom Stellard <tstellar@redhat.com>
              'D574BD5D1D0E98895E3BF90044F2485E45D59042') # Tobias Hieta <tobias@hieta.se>

prepare() {
    mkdir -p build
}

build() {
    cmake -B build -G Ninja \
        -DCMAKE_BUILD_TYPE=Release \
        -DCMAKE_INSTALL_PREFIX=/usr \
        -DCMAKE_C_COMPILER=clang \
        -DCMAKE_CXX_COMPILER=clang++ \
        -DLLVM_INSTALL_UTILS=ON \
        -DLLVM_BUILD_DOCS:BOOL=OFF \
        -DLLVM_LINK_LLVM_DYLIB:BOOL=ON \
        -DLLVM_USE_PERF:BOOL=ON \
        -DLLVM_USE_LINKER=mold \
        -DLLVM_EXTERNAL_LIT=/usr/bin/lit \
        -DLLVM_ENABLE_PROJECTS="bolt" \
        -DLLVM_TARGETS_TO_BUILD="X86" \
        -DLLVM_PARALLEL_LINK_JOBS=3 \
        ../llvm-project-$pkgver.src/llvm
    ninja -C build bolt
}

# check() {
#     # ninja -C build check-bolt
#     ninja -C build check-all
#     echo -e "\nTesting targets..."
#     ninja -C build -t targets all 2>/dev/null || true
# }

package () {
    DESTDIR="$pkgdir" ninja -C build install-bolt
}
